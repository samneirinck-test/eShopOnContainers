version: '3.4'

services:
  basket.api:
    image: eshop/basket.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Basket/Basket.API/Dockerfile
    depends_on:
      - basket.data
      - identity.api
      - rabbitmq

  catalog.api:
    image: eshop/catalog.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.API/Dockerfile
    depends_on:
      - sql.data
      - rabbitmq

  identity.api:
    image: eshop/identity.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.API/Dockerfile
    depends_on:
      - sql.data

  ordering.api:
    image: eshop/ordering.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Ordering/Ordering.API/Dockerfile
    depends_on:
      - sql.data
      - rabbitmq

  ordering.backgroundtasks:
    image: eshop/ordering.backgroundtasks-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Ordering/Ordering.BackgroundTasks/Dockerfile    
    depends_on:
      - sql.data
      - rabbitmq

  ordering.signalrhub:
    image: eshop/ordering.signalrhub:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Ordering/Ordering.SignalrHub/Dockerfile 
    depends_on:
      - sql.data
      - identity.api
      - rabbitmq

  marketing.api:
    image: eshop/marketing.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Marketing/Marketing.API/Dockerfile    
    depends_on:
      - sql.data
      - nosql.data
      - identity.api
      - rabbitmq

  webspa:
    image: eshop/webspa-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Web/WebSPA/Dockerfile
    depends_on:
      - catalog.api
      - ordering.api
      - identity.api
      - basket.api
      - marketing.api

  webmvc:
    image: eshop/webmvc-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Web/WebMVC/Dockerfile
    depends_on:
      - catalog.api
      - ordering.api
      - identity.api
      - basket.api
      - marketing.api
  
  webstatus:
    image: eshop/webstatus-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Web/WebStatus/Dockerfile

  payment.api:
    image: eshop/payment.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Payment/Payment.API/Dockerfile
    depends_on:
      - rabbitmq

  locations.api:
    image: eshop/locations.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Location/Locations.API/Dockerfile
    depends_on:
      - nosql.data
      - rabbitmq

  sql.data:
    image: microsoft/mssql-server-windows-developer:latest@sha256:a3e77eb7ac136bf419269ab6a3f3387df5055d78b2b6ba2e930e1c6312b50e07
  
  nosql.data:
    image: mongo:windowsservercore@sha256:fd09cb2c96c9d746194d59f23fa9440b7b2aa7b41e69302a372869e929b11706

  basket.data:
    image: redis:nanoserver@sha256:0504a89bfa3ed423a4537e20579434e08058043537822c8578c98ac71ef971bf
    ports:
        - "6379:6379"

  rabbitmq:
    image: spring2/rabbitmq:latest@sha256:a90c6352281163301c04b38b1154d6df63e806ecac0386163854c8dbcc02fc1a
    ports:
      - "15672:15672"    
      - "5672:5672"

networks:
  default:
    external:
      name: nat

